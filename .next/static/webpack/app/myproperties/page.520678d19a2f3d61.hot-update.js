"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/myproperties/page",{

/***/ "(app-pages-browser)/./app/services/apiService.ts":
/*!************************************!*\
  !*** ./app/services/apiService.ts ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lib_actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/actions */ \"(app-pages-browser)/./app/lib/actions.ts\");\n // Import a function to get access token\nconst apiService = {\n    // Method to send GET requests\n    get: async function(url) {\n        console.log(\"get\", url);\n        // Get access token for authorization\n        const token = await (0,_lib_actions__WEBPACK_IMPORTED_MODULE_0__.getAccessToken)();\n        return new Promise((resolve, reject)=>{\n            fetch(\"\".concat(\"http://localhost:8000\").concat(url), {\n                method: \"GET\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \".concat(token)\n                }\n            }).then((response)=>{\n                var _response_headers_get;\n                // Check if response is in JSON format\n                if ((_response_headers_get = response.headers.get(\"Content-Type\")) === null || _response_headers_get === void 0 ? void 0 : _response_headers_get.includes(\"application/json\")) {\n                    return response.json(); // Parse response as JSON\n                } else {\n                    console.log(\"Response is not JSON\"); // Log if response is not JSON\n                }\n            }).then((json)=>{\n                console.log(\"Response:\", json); // Log the response\n                resolve(json); // Resolve the promise with JSON data\n            }).catch((error)=>{\n                reject(error); // Reject promise on error\n            });\n        });\n    },\n    // Method to send POST requests with authorization\n    post: async function(url, data) {\n        console.log(\"post\", url, data);\n        // Get access token for authorization\n        const token = await (0,_lib_actions__WEBPACK_IMPORTED_MODULE_0__.getAccessToken)();\n        return new Promise((resolve, reject)=>{\n            fetch(\"\".concat(\"http://localhost:8000\").concat(url), {\n                method: \"POST\",\n                body: data,\n                headers: {\n                    Authorization: \"Bearer \".concat(token)\n                }\n            }).then((response)=>{\n                return response.json();\n            }) // Parse response as JSON\n            .then((json)=>{\n                console.log(\"Response:\", json); // Log the response\n                resolve(json); // Resolve the promise with JSON data\n            }).catch((error)=>{\n                reject(error); // Reject promise on error\n            });\n        });\n    },\n    // Method to send POST requests without authorization token\n    postWithoutToken: async function(url, data) {\n        console.log(\"Fetching from:\", \"\".concat(\"http://localhost:8000\").concat(url));\n        console.log(\"Post data:\", data);\n        console.log(\"Data type:\", typeof data);\n        return new Promise((resolve, reject)=>{\n            fetch(\"\".concat(\"http://localhost:8000\").concat(url), {\n                method: \"POST\",\n                body: JSON.stringify(data),\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                }\n            }).then((response)=>{\n                return response.json(); // Parse response as JSON\n            }).then((json)=>{\n                console.log(\"Response\", json); // Log the response\n                return resolve(json); // Resolve the promise with JSON data\n            }).catch((err)=>{\n                console.error(\"Fetch error:\", err); // Log error if fetch fails\n                reject(err); // Reject promise on error\n            });\n        });\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (apiService); // Export the apiService object for use in other files\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/services/apiService.ts\n"));

/***/ })

});